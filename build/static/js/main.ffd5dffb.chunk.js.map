{"version":3,"sources":["services/notes.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","errorMessage","successMessage","className","Filter","newSearch","onSearchChange","value","onChange","Persons","persons","DeleteContact","length","filter","person","name","toLowerCase","includes","map","key","number","onClick","Personform","addName","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","App","useState","setPersons","setNewName","setNewNumber","SetnewSearch","setErrorMessage","setsuccessMessage","useEffect","console","log","noteService","initialNotes","newsearch","event","target","preventDefault","note","find","i","changedPersons","returnedNote","setTimeout","catch","error","undefined","alert","concat","contact","window","confirm","posts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffd5dffb.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n\r\n  export default {getAll,create,remove,update}","import React, { useState, useEffect } from 'react'\nimport noteService from './services/notes'\nimport './index.css'\n\n\nconst Notification = ({errorMessage,successMessage }) => {\n  if (errorMessage === null && successMessage === null) {\n    return null\n  } else if (successMessage !== null) {\n    return (\n      <div className=\"success\">\n        {successMessage}\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"error\">\n        {errorMessage}\n      </div>\n    )\n  }\n\n  \n}\n\nconst Filter = ({ newSearch, onSearchChange }) => {\n  \n  return (\n  <div>\n    filter shown with <input value={newSearch} onChange = {onSearchChange} />\n  </div>\n  )\n}\n\n\nconst Persons = ({persons,newSearch,DeleteContact}) => {\n\n  if (newSearch.length > 0){\n    const filteredPersons = persons.filter(person =>person.name.toLowerCase().includes(newSearch.toLowerCase()))\n    \n    return filteredPersons.map(person=> <p key={person.name}>{person.name} {person.number} <button onClick={() =>DeleteContact(person)} >delete</button></p>)\n\n  } else {\n    \n    return persons.map(person=> <p key={person.name}>{person.name} {person.number}<button onClick={() =>DeleteContact(person)} >delete</button></p>)\n  }\n}\n\nconst Personform = ({addName,newName,newNumber,handleNameChange,handleNumberChange}) => {\n  return (\n    <form onSubmit={addName}>\n      <div>\n        name: <input\n                value={newName}\n                onChange={handleNameChange}\n               /><br/>\n        number: <input\n                value = {newNumber}\n                onChange= {handleNumberChange}\n                />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [newNumber,setNewNumber] = useState('')\n  const [newSearch,SetnewSearch] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [successMessage,setsuccessMessage] = useState(null)\n  \n  useEffect(() => {\n    console.log('effect')\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setPersons(initialNotes)\n      })\n  },[])\n  \n\n  const addName = (event) => {\n    event.preventDefault()\n    \n  if (persons.filter(person => person.name === newName).length>0){\n      \n        const note = persons.find(i => i.name===newName)\n        const changedPersons = {...note, number: newNumber}\n        const id = note.id\n\n        noteService\n        .update(id,changedPersons)\n        .then(returnedNote => {\n          setPersons(persons.map(note => note.id !== id ? note : returnedNote)) \n          setNewName('')\n          setNewNumber('')\n          \n          setsuccessMessage(`Updated ${note.name}'s contact number!`)\n          setTimeout(() => {\n            setsuccessMessage(null)\n          }, 5000)\n          \n        })\n        .catch(error => {\n          \n           if (error.response.data.error === undefined){\n            setErrorMessage(\n              `Information of ${newName} has already been removed from server`\n            )\n           } else {\n             setErrorMessage(`${error.response.data.error}`)\n           }\n            \n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n          \n          \n        })\n        \n      \n    } else if (newName.length===0){\n      alert (`Name is required for adding to the phonebook`)\n    }\n    else\n    {\n\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      \n      }\n\n      noteService\n      .create(newPerson)\n      .then(returnedNote => {\n        setPersons(persons.concat(returnedNote))\n        setNewName('')\n        setNewNumber('')\n        setsuccessMessage(`Added ${returnedNote.name} to contacts`)\n        \n        setTimeout(() => {\n          setsuccessMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n\n        console.log(error.response.data)\n        setErrorMessage(`${error.response.data.error}`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNewName('')\n        setNewNumber('')\n        \n        \n      })\n    }\n  }\n\n\n  const DeleteContact = (contact) => {\n    \n    const result = window.confirm (`Delete ${contact.name} ?`)\n   \n      if (result === true) {\n\n        noteService\n        .remove(contact.id)\n        .then(response => {\n          console.log(response)\n          const posts = persons.filter(person => person.name !== contact.name)\n          setPersons(posts)\n          setsuccessMessage(`Deleted ${contact.name} from contacts!`)\n        \n          setTimeout(() => {\n            setsuccessMessage(null)\n          }, 5000)\n          \n        })\n        .catch(error => {\n          console.log('failed to delete contact')\n\n          \n        })\n    }\n  }\n\n  \nconst handleNameChange = (event) => {\n   // console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    //console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) =>{\n   // console.log(event.target.value)\n    SetnewSearch(event.target.value)\n  }\n\n  \n  \n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification errorMessage={errorMessage} successMessage={successMessage}/>\n      <Filter newsearch={newSearch} onSearchChange = {handleSearchChange}/>\n      \n      <h1>Add a new</h1>\n      <Personform addName = {addName} newName= {newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}/>\n      <h1>Numbers</h1>\n      <Persons persons={persons} newSearch={newSearch} DeleteContact= {DeleteContact}/>\n\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}